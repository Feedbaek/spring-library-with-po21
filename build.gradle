import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java'
    id("com.vanniktech.maven.publish") version "0.29.0"
    id 'signing' // GPG 서명을 위한 플러그인 추가
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.7'
}

// Maven 그룹 및 버전 설정
group = 'io.github.feedbaek'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

tasks.withType(Javadoc) {
    options {
        encoding 'UTF-8'
    }
}

signing {
    sign publishing.publications
}


mavenPublishing {
    coordinates("io.github.feedbaek", "minskim2-starter", "0.0.1")

    pom {
        name.set("minskim2-starter") // Project Name
        description.set("Spring Library Starter") // Project Description
        inceptionYear.set("2025") // 개시년도
        url.set("https://github.com/Feedbaek/spring-library-with-po21") // Project URL

        licenses { // License Information
            license {
                name.set("The Apache License, Version 2.0")
                url.set("https://www.apache.org/licenses/LICENSE-2.0.txt")
            }
        }

        developers { // Developer Information
            developer {
                id.set("Feedbaek")
                name.set("MinSeok Kim")
                email.set("nicek789@gmail.com")
            }
        }

        scm { // SCM Information
            connection.set("scm:git:git://github.com/Feedbaek/spring-library-with-po21.git")
            developerConnection.set("scm:git:ssh://github.com/Feedbaek/spring-library-with-po21.git")
            url.set("https://github.com/Feedbaek/spring-library-with-po21.git")
        }
    }

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

    signAllPublications() // GPG/PGP 서명
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.18.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
    useJUnitPlatform()
}
